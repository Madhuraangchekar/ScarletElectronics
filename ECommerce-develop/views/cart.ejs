<!DOCTYPE html>
<html>
<head>
    <meta charset="ISO-8859-1">
    <title>Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/dataTables.bootstrap5.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>    .important-row { background-color: yellow; } </style>

    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
</head>
    
<body align="center">

    <%- include('Common/header2.ejs') %>
    
    <form action="/cart/get-final-cost" name="login">

        <div class="container mt-5">
            <div class="row">
                <div class="col-md-8">
                    <h2 class="text-center mx-auto">Cart</h2>
                    <table class="table table-bordered" id="cartItemsTable">
                        <thead>
                            <tr class="table-primary">
                                <th class="w-25 text-center">Item Name</th>
                                <th class="w-25 text-center">Quantity (qty)</th>
                                <th class="w-25 text-center">Cost per item</th>
                                <th class="w-25 text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="dynamicTable">
                            <!-- Table rows will be added here -->
                        </tbody>
                    </table>
        
                    <div class="form-group">
                        <input type="text" class="form-control" name="promocode" id="promocodeInput" placeholder="Enter Promo code if any?" onchange="checkpromocode(this.value)">
                    </div>
        
                    <div id="hiddenElement" style="display: none;"></div>
                </div>
        
                <div class="col-md-4">
                    <h2  class="text-primary text-center mx-auto">Delivery Address</h2>
                    <div class="form-group" id="address">
                        <div class="form-group">
                            <label for="address1">Address Line 1<span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="address1" id="address1" placeholder="Enter Address Line 1" required>
                        </div>
        
                        <div class="form-group">
                            <label for="address2">Address Line 2</label>
                            <input type="text" class="form-control" name="address2" id="address2" placeholder="Enter Address Line 2">
                        </div>
        
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="city">City<span class="text-danger">*</span></label>
                                <input type="text" class="form-control" name="address3" id="address3" placeholder="Enter City" required>
                            </div>
        
                            <div class="form-group col-md-6">
                                <label for="state">State<span class="text-danger">*</span></label>
                                <select class="form-control" name="address4" id="address4" required><option value="" selected disabled>Select State</option><option value="AL">Alabama</option><option value="AK">Alaska</option><option value="AZ">Arizona</option><option value="AR">Arkansas</option><option value="CA">California</option><option value="CO">Colorado</option><option value="CT">Connecticut</option><option value="DE">Delaware</option><option value="FL">Florida</option><option value="GA">Georgia</option><option value="HI">Hawaii</option><option value="ID">Idaho</option><option value="IL">Illinois</option><option value="IN">Indiana</option><option value="IA">Iowa</option><option value="KS">Kansas</option><option value="KY">Kentucky</option><option value="LA">Louisiana</option><option value="ME">Maine</option><option value="MD">Maryland</option><option value="MA">Massachusetts</option><option value="MI">Michigan</option><option value="MN">Minnesota</option><option value="MS">Mississippi</option><option value="MO">Missouri</option><option value="MT">Montana</option><option value="NE">Nebraska</option><option value="NV">Nevada</option><option value="NH">New Hampshire</option><option value="NJ">New Jersey</option><option value="NM">New Mexico</option><option value="NY">New York</option><option value="NC">North Carolina</option><option value="ND">North Dakota</option><option value="OH">Ohio</option><option value="OK">Oklahoma</option><option value="OR">Oregon</option><option value="PA">Pennsylvania</option><option value="RI">Rhode Island</option><option value="SC">South Carolina</option><option value="SD">South Dakota</option><option value="TN">Tennessee</option><option value="TX">Texas</option><option value="UT">Utah</option><option value="VT">Vermont</option><option value="VA">Virginia</option><option value="WA">Washington</option><option value="WV">West Virginia</option><option value="WI">Wisconsin</option><option value="WY">Wyoming</option>
                                </select>
                            </div>
                        </div>
        
                        <div class="form-group">
                            <label for="pincode">Pincode<span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="address5" id="address5" placeholder="Enter Pincode" pattern="\d{5}" title="Enter a valid 5-digit pin code" required>
                        </div>
                    </div>
                </div>
            </div>
        
            <!-- Add some spacing between the sections -->
            <div class="my-4"></div>
        
            <div class="row" id="btn">
                <div class="col-md-4 offset-md-8">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary btn-block mt-3" id="getFinalCost">Get Final Cost</button>
                        <button type="button" class="btn btn-danger btn-block mt-3" id="removeAll">Flush Cart</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <br> <br>
    <script>
        var cartDetails;
        var cartDetailsLength;
        
        function cartSync() 
        {
            event.preventDefault();
			//query param to be added
            const queryString = `?filter=${encodeURIComponent(false)}&justCart=${encodeURIComponent('true')}`;
            
            fetch(`/cart/fetch-cart${queryString}`)
			.then(response => response.json())
			.then(data => {
                console.log("data");
				if (data) {
					// console.log(".....",data);
                    cartDetails = data['cartDetails'];
                    total_cost = data['TotalPrice'];
                    // console.log(typeof data['cartDetails']);
                    const dynamicTable = document.getElementById('dynamicTable');
                    const addRowButton = document.getElementById('addRow');
                    const cartItemsTable = document.getElementById('cartItemsTable');
                    const promocode = document.getElementById('promocodeInput');
                    const address = document.getElementById('address');
                    const btn = document.getElementById('btn');
                    let rowCounter = 0;

                    cartDetailsLength = cartDetails.reduce((count, value) => {
                        return count + (value === null ? 0 : 1);
                    }, 0);


                    if(data['CartMaxQty'] == 0)
                    {
                        document.getElementById('getFinalCost').disabled = true;
                    }

                    // if (cartDetails)

                    //clear dynamic table
                    dynamicTable.innerHTML = '';

                    if (cartDetails.length == 0 )
                    {
                        cartItemsTable.style.display = 'none';
                        promocode.style.display = 'none';
                        address.style.display = 'none';
                        dynamicTable.style.display = 'none';
                        btn.style.display = 'none';
                        var dynamicContent = "Empty Cart! Please make sure to add items to proceed further!!!";
                        // hiddenElement.innerHTML = dynamicContent;
                        // hiddenElement.style.color = "red";
                        // hiddenElement.style.fontSize = "20px";
                        // hiddenElement.style.display = "flex";
                        // hiddenElement.style.alignItems = "center";
                        // hiddenElement.style.justifyContent = "center";
                        alert(dynamicContent);
                        window.location.href = "/item-listing/listings";
                        // window.alert(dynamicContent);
                    }

                    else
                    {
                        cart_row_reference = [];
                        for (const itemData of cartDetails) {
                            rowCounter++;
                            const newRow = document.createElement('tr');
                            
                            newRow.innerHTML = `
                                <td class="w-25" style= >
                                    <label for="item${rowCounter}">${itemData.name}</label>
                                </td>`;

                            console.log(itemData.quantity);

                            if (itemData.max_quantity !== 0) {
                                newRow.innerHTML += `
                                    <td class="w-25">
                                        <input type="number" class="form-control" name="qty${rowCounter}" value="${itemData.quantity}" min="1"  onchange="updateqty(${rowCounter}, this.value)" ${itemData.max_quantity == 0 ? 'disabled' : ''}>
                                    </td>`;
                            } else {
                                newRow.innerHTML += `
                                    <td class="w-25 text-center">
                                        <label for="item${rowCounter}" ;">Unavailable</label>
                                    </td>`;
                            }

                            newRow.innerHTML += `
                                <td class="w-25 text-center">
                                    <label for="item${rowCounter}">${itemData.price} $</label>
                                </td>
                                <td class="w-25">
                                    <button type="button" style="width: 100%" class="btn btn-danger btn-block" onclick="removeRow(this)">Remove Item</button>
                                </td>
                            `;
                            dynamicTable.appendChild(newRow);
                        }
                    }
				}
			})
		}

        document.addEventListener('DOMContentLoaded', () => {
            cartSync();
        });

        document.getElementById('removeAll').addEventListener('click', () => {
            // Remove all rows from the table
            const dynamicTable = document.getElementById('dynamicTable');
            const cartItemsTable = document.getElementById('cartItemsTable');
            const address = document.getElementById('address');
            const promocode = document.getElementById('promocodeInput');
            const btn = document.getElementById('btn');
            dynamicTable.innerHTML = '';
            cartItemsTable.innerHTML = '';
            address.innerHTML = '';
            promocode.innerHTML = '';
            btn.innerHTML = '';
            var dynamicContent = "Empty Cart! Please make sure to add items to proceed further!!!";
            
            // hiddenElement.innerHTML = dynamicContent;
            // hiddenElement.style.color = "red";
            // hiddenElement.style.fontSize = "20px";
            // hiddenElement.style.display = "flex";
            // hiddenElement.style.alignItems = "center";
            // hiddenElement.style.justifyContent = "center";
            alert(dynamicContent);
            window.location.href = "/item-listing/listings";

            //send ajax post request to flush
            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", "/cart/flush", true);
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.send();
        });

        function checkpromocode(promocode)
        {
            console.log(promocode);
            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", "/cart/check-promo-code", true);
            xhttp.setRequestHeader("Content-type", "application/json");

            var data = JSON.stringify({ "promocode": promocode});
            
            xhttp.onreadystatechange = function () {
                var hiddenElement = document.getElementById("hiddenElement");
                var response = this.responseText;
                console.log(response);
                
                if (xhttp.readyState == 4) {
                // Check if the request was successful (status code 200)
                    if (xhttp.status == 200) {
                        // Parse the response JSON if applicable
                        var jsonResponse = xhttp.responseText;
                        var dynamicContent = "PROMOCODE found, Hurray!!!!";
                        hiddenElement.innerHTML = dynamicContent;
                        hiddenElement.style.display = "block";
                        alert(response);
                    } else {
                        // Handle the error or non-200 status code here
                        var dynamicContent = "PROMOCODE not found, Sorry!!!";
                        hiddenElement.innerHTML = dynamicContent;
                        hiddenElement.style.display = "block";
                        alert(response);
                    }
                }
            };

            xhttp.send(data);
        }
        
        

        function updateqty(row, qty) 
        {
            // send ajax post request to update item quantity

            // get item number from row from substring after the 4th character of the "for" attribute of the label
            var itemNumber = row;
            // convert item number to an integer
            itemNumber = parseInt(itemNumber);

            // get listing id cartDetails[itemNumber-1].listing_id
            var listingId = cartDetails[itemNumber - 1].listingId;

            // send ajax post request to update item with listing_id
            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", "/cart/update-itemlisting", true);
            xhttp.setRequestHeader("Content-type", "application/json");

            var data = JSON.stringify({ "listingId": listingId, "updateCount": qty });

            //alert for response 400 and string response = "quantity of listingId is less than updateCount"
            xhttp.onreadystatechange = function () 
            {
                //for status 400 with payload = "quantity of listingId is less than updateCount"
                if (xhttp.readyState == 4) 
                {
                    if (xhttp.status == 400) 
                    {
                        // Parse the response JSON if applicable
                        var Response = xhttp.responseText;
                        if (Response == "item count exceded the total stock in the inventory") {
                            alert("item count exceded the total stock in the inventory")
                            cartSync();
                        }
                        
                            
                        
                    }
                
                };
            }
            xhttp.send(data);
        }

        function removeRow(button) {
            // Get the parent row and remove it
            const cartItemsTable = document.getElementById('cartItemsTable');
            const promocode = document.getElementById('promocodeInput');
            const address = document.getElementById('address');
            const dynamicTable = document.getElementById('dynamicTable');
            const btn = document.getElementById('btn');
            
            var row = button.parentElement.parentElement;
            row.remove();

            // console.log(row.getElementsByTagName("label")[0].getAttribute("for"));

            //send ajax post request to remove item

            //get item number from row from substring after 4th character of for attribute of label
            var itemNumber = row.getElementsByTagName("label")[0].getAttribute("for").substring(4);
            //convert item number to integer
            itemNumber = parseInt(itemNumber);

            console.log(itemNumber, cartDetails);
            // console.log(cartDetails);

            //get listing id cartdetails[itemNumber-1].listing_id
            var listingId = cartDetails[itemNumber-1].listingId;
            
            // console.log(listingId);
            cartDetails[itemNumber-1] = null;

            let countNull = cartDetails.reduce((count, value) => {
                return count + (value === null ? 1 : 0);
            }, 0);
            
            console.log(itemNumber,cartDetailsLength, countNull, cartDetails);

            if (cartDetailsLength == countNull)
            {
                cartItemsTable.style.display = 'none';
                promocode.style.display = 'none';
                address.style.display = 'none';
                dynamicTable.style.display = 'none';
                btn.style.display = 'none';
                var dynamicContent = "Empty Cart! Please make sure to add items to proceed further!!!";
                // hiddenElement.innerHTML = dynamicContent;
                // hiddenElement.style.color = "red";
                // hiddenElement.style.fontSize = "20px";
                // hiddenElement.style.display = "flex";
                // hiddenElement.style.alignItems = "center";
                // hiddenElement.style.justifyContent = "center";
                alert(dynamicContent);
                window.location.href = "/item-listing/listings";
                // window.alert(dynamicContent);
            }

            let cart_max_qty=0;

            // console.log(cartDetails);

            for (var i = 0; i < cartDetails.length; i++)
            {
                if (cartDetails[i] != null)
                {
                    cart_max_qty += cartDetails[i].max_quantity;
                }
            }

            if(cart_max_qty == 0)
            {
                document.getElementById('getFinalCost').disabled = true;
            }
            

            // send ajax post request to remove item with listing_id
            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", "/cart/remove-itemlisting", true);
            xhttp.setRequestHeader("Content-type", "application/json");

            var data = JSON.stringify({ "listingId": listingId });

            
            xhttp.send(data);

            

            //remove item from cartDetails
        }

        /*
        //checkout button
        document.getElementById('getFinalCost').addEventListener('click', () => {
            //get all rows from the table
            const dynamicTable = document.getElementById('dynamicTable');
            const rows = dynamicTable.getElementsByTagName("tr");
            console.log(1)

            //get all addresses
            const address = document.getElementById('address');
            const address1 = address.getElementsByTagName("input")[0].value;
            const address2 = address.getElementsByTagName("input")[1].value;
            const address3 = address.getElementsByTagName("input")[2].value;
            const address4 = address.getElementsByTagName("input")[3].value;
            const address5 = address.getElementsByTagName("input")[4].value;
            console.log(address1);
            console.log(address2);
            console.log(address3);
            console.log(address4);
            console.log(address5);

            console.log(2)

            //get promocode
            const promocode = document.getElementById('promocode');
            const promocode1 = promocode.getElementsByTagName("input")[0].value;
            console.log('3'+ promocode1);

            //get all quantities
            var quantities = [];
            for (var i = 0; i < rows.length; i++) {
                var row = rows[i];
                var quantity = row.getElementsByTagName("input")[0].value;
                quantities.push(quantity);
            }
            console.log('4' + quantities);

            //get all listing ids
            var listingIds = [];
            for (var i = 0; i < rows.length; i++) {
                var row = rows[i];
                var listingId = row.getElementsByTagName("label")[0].getAttribute("for").substring(4);
                listingIds.push(listingId);
            }
            console.log('5' + listingIds);

            //send ajax post request to checkout
            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", "/cart/get-final-cost", true);
            xhttp.setRequestHeader("Content-type", "application/json");
            xhttp.send(JSON.stringify({listing_ids: listingIds, quantities: quantities, address1: address1, address2: address2, address3: address3, address4: address4, address5: address5, promoCode: promocode1}));
        });*/
    </script>

</body>
</html>
